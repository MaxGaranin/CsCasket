// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartPin.Context;

#nullable disable

namespace SmartPin.Migrations
{
    [DbContext(typeof(SmartPinContext))]
    [Migration("20240725133055_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartPin.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasDiscriminator().HasValue("Player");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SmartPin.Entities.Shot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Shots");
                });

            modelBuilder.Entity("SmartPin.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartPin.Entities.EventParticipant", b =>
                {
                    b.HasBaseType("SmartPin.Entities.Player");

                    b.Property<int>("EventId")
                        .HasColumnType("integer");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.HasIndex("ParentId");

                    b.ToTable("Player", t =>
                        {
                            t.Property("ParentId")
                                .HasColumnName("EventParticipant_ParentId");
                        });

                    b.HasDiscriminator().HasValue("EventParticipant");
                });

            modelBuilder.Entity("SmartPin.Entities.Guest", b =>
                {
                    b.HasBaseType("SmartPin.Entities.Player");

                    b.Property<bool>("HasActivities")
                        .HasColumnType("boolean");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.HasIndex("ParentId");

                    b.HasDiscriminator().HasValue("Guest");
                });

            modelBuilder.Entity("SmartPin.Entities.RegisteredPlayer", b =>
                {
                    b.HasBaseType("SmartPin.Entities.Player");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("RegisteredPlayer");
                });

            modelBuilder.Entity("SmartPin.Entities.Shot", b =>
                {
                    b.HasOne("SmartPin.Entities.Player", "Player")
                        .WithMany("Shots")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SmartPin.Entities.EventParticipant", b =>
                {
                    b.HasOne("SmartPin.Entities.RegisteredPlayer", "Parent")
                        .WithMany("EventParticipants")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SmartPin.Entities.Guest", b =>
                {
                    b.HasOne("SmartPin.Entities.RegisteredPlayer", "Parent")
                        .WithMany("Guests")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SmartPin.Entities.RegisteredPlayer", b =>
                {
                    b.HasOne("SmartPin.Entities.User", "User")
                        .WithOne("RegisteredPlayer")
                        .HasForeignKey("SmartPin.Entities.RegisteredPlayer", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartPin.Entities.Player", b =>
                {
                    b.Navigation("Shots");
                });

            modelBuilder.Entity("SmartPin.Entities.User", b =>
                {
                    b.Navigation("RegisteredPlayer");
                });

            modelBuilder.Entity("SmartPin.Entities.RegisteredPlayer", b =>
                {
                    b.Navigation("EventParticipants");

                    b.Navigation("Guests");
                });
#pragma warning restore 612, 618
        }
    }
}
